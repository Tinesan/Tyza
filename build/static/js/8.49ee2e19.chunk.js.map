{"version":3,"sources":["pages/LoginPage/LoginPage.tsx"],"names":["LoginPage","history","useHistory","addToast","useToasts","setAuthData","useContext","AuthContext","userAuth","useAuthenticateQuery","skip","refetch","useState","loginValue","setLoginValue","passwordValue","setPasswordValue","onSubmit","useCallback","a","username","password","authenticate","data","sessionStorage","setItem","JSON","stringify","push","appearance","useEffect","submitOnEnter","e","key","document","addEventListener","removeEventListener","className","Container","Row","Col","md","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","variant","onClick"],"mappings":"gRAgFeA,EAxEG,WAChB,IAAMC,EAAUC,cACRC,EAAaC,sBAAbD,SACAE,EAAgBC,qBAAWC,KAA3BF,YACSG,EAAaC,YAAqB,CAAEC,MAAM,IAAnDC,QAJc,EAKcC,mBAAiB,IAL/B,mBAKfC,EALe,KAKHC,EALG,OAMoBF,mBAAiB,IANrC,mBAMfG,EANe,KAMAC,EANA,KAQhBC,EAAWC,sBAAW,sBAAC,8BAAAC,EAAA,+EAIfX,EAAS,CACjBY,SAAUP,EACVQ,SAAUN,IANa,iBAGfO,EAHe,EAGvBC,KAAQD,gBAMRE,eAAeC,QAAQ,QAASC,KAAKC,UAAUL,IAC/CjB,EAAYiB,GACZrB,EAAQ2B,KAAK,WAXU,gDAczBzB,EAAS,0IAA6B,CAAE0B,WAAY,UAd3B,yDAgB1B,CAAChB,EAAYE,EAAed,EAASI,EAAaG,EAAUL,IAe/D,OAbA2B,qBAAU,WACR,IAAMC,EAAgB,SAACC,GACP,UAAVA,EAAEC,KACJhB,KAKJ,OAFAiB,SAASC,iBAAiB,WAAYJ,GAE/B,WACLG,SAASE,oBAAoB,WAAYL,MAE1C,CAACd,IAGF,6BAASoB,UAAU,QACjB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKF,UAAU,0BACb,kBAACG,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,cACZC,MAAOpC,EACPqC,SAAU,SAAClB,GAAD,OAAOlB,EAAckB,EAAEmB,OAAOF,WAG5C,kBAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAAClB,GAAD,OAAOhB,EAAiBgB,EAAEmB,OAAOF,WAG/C,kBAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASrC,GAAnC","file":"static/js/8.49ee2e19.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport { useAuthenticateQuery } from \"generated/graphql\";\nimport { AuthContext } from \"providers/AuthProvider\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const { addToast } = useToasts();\n  const { setAuthData } = useContext(AuthContext);\n  const { refetch: userAuth } = useAuthenticateQuery({ skip: true });\n  const [loginValue, setLoginValue] = useState<string>(\"\");\n  const [passwordValue, setPasswordValue] = useState<string>(\"\");\n\n  const onSubmit = useCallback(async () => {\n    try {\n      const {\n        data: { authenticate },\n      } = await userAuth({\n        username: loginValue,\n        password: passwordValue,\n      });\n      if (authenticate) {\n        sessionStorage.setItem(\"login\", JSON.stringify(authenticate));\n        setAuthData(authenticate);\n        history.push(\"/admin\");\n      }\n    } catch (error) {\n      addToast(\"Неверный логин или пароль\", { appearance: \"error\" });\n    }\n  }, [loginValue, passwordValue, history, setAuthData, userAuth, addToast]);\n\n  useEffect(() => {\n    const submitOnEnter = (e: KeyboardEvent) => {\n      if (e.key === \"Enter\") {\n        onSubmit();\n      }\n    };\n    document.addEventListener(\"keypress\", submitOnEnter);\n\n    return () => {\n      document.removeEventListener(\"keypress\", submitOnEnter);\n    };\n  }, [onSubmit]);\n\n  return (\n    <section className=\"mt-5\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md={6}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Login</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter login\"\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                value={passwordValue}\n                onChange={(e) => setPasswordValue(e.target.value)}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" onClick={onSubmit}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}